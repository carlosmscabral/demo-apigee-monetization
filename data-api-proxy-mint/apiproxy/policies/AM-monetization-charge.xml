<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<AssignMessage continueOnError="false" enabled="true" name="AM-monetization-charge">
  <IgnoreUnresolvedVariables>true</IgnoreUnresolvedVariables>
  <!-- For Data Capture:
        currency
        transactionSuccess
        perUnitPriceMultiplier - set in respective flow
        revShareGrossPrice  - set in respective flow, should be taken from mint.mintng_rate
    -->
  <!-- Monetization variables -->
  <AssignVariable>
    <Name>response.header.x-monetization-currency</Name>
    <Ref>mint.limitscheck.prepaid_developer_currency</Ref>
    <Value>USD</Value>
  </AssignVariable>
  <AssignVariable>
    <Name>response.header.x-monetization-success</Name>
    <Value>true</Value>
  </AssignVariable>
  <AssignVariable>
    <Name>response.header.x-monetization-multiplier</Name>
    <Ref>verifyapikey.VAK-VerifyKey.apiproduct.operation.attributes.multiplier</Ref>
  </AssignVariable>
  <Set>
    <Headers>
      <!-- Used for feedback  -->
      <Header name="X-Monetization-Developer">{verifyapikey.VAK-VerifyKey.developer.email}</Header>
      <Header name="X-Monetization-Application">{verifyapikey.VAK-VerifyKey.developer.app.name}</Header>
      <Header name="X-Monetization-API-Product">{mint.limitscheck.purchased_product_name}</Header>
      <Header name="X-Monetization-Rate-Plan-Id">{mint.mintng_rate_plan_id}</Header>
      <Header name="X-Monetization-Quota">{verifyapikey.VAK-VerifyKey.apiproduct.developer.quota.limit} per {verifyapikey.VAK-VerifyKey.apiproduct.developer.quota.interval} {verifyapikey.VAK-VerifyKey.apiproduct.developer.quota.timeunit}</Header>
      <Header name="X-Monetization-Enforce">{ratelimit.QU-monetization-enforce.used.count} of {ratelimit.QU-monetization-enforce.allowed.count} with {ratelimit.QU-monetization-enforce.available.count} available and {ratelimit.QU-monetization-enforce.exceed.count} exceeded</Header>
      <Header name="X-Monetization-Count">{ratelimit.QU-monetization-count.used.count} of {ratelimit.QU-monetization-count.allowed.count} with {ratelimit.QU-monetization-count.available.count} available and {ratelimit.QU-monetization-count.exceed.count} exceeded</Header>
    </Headers>
  </Set>
</AssignMessage>
